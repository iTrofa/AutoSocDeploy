[alert_ssh_honeypot_access_overview]
action.webhook.enable_allowlist = 0
alert.severity = 4
alert.suppress = 1
alert.suppress.period = 4h
alert.track = 1
counttype = number of events
cron_schedule = * * * * *
description = "Alert when an SSH honeypot is accessed unsuccessfully"
dispatch.earliest_time = -4h@h
dispatch.latest_time = now
display.page.search.mode = verbose
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=* (eventid="cowrie.session.connect" OR eventid="cowrie.login.success" OR eventid="cowrie.session.closed")\
| rex field=_raw "\"eventid\":\"cowrie.session.connect\",\"src_ip\":\"(?<src_ip>[^\"]+)\",\"src_port\":\d+,\"dst_ip\":\"(?<dst_ip>[^\"]+)\",\"dst_port\":\d+,\"session\":\"(?<session>[^\"]+)\",\"protocol\":\"ssh\""\
| join type=left session [\
    search index=* "\"eventid\":\"cowrie.login.success\",\"username\":\"(?<username>[^\"]+)\",\"password\":\"[^\"]+\",\"message\":\"login attempt\""\
  ]\
| join type=left session [\
    search index=* "\"eventid\":\"cowrie.session.closed\",\"duration\":(?<duration>[0-9.]+),\"message\":\"Connection lost\""\
  ]\
| eval duration_seconds = round(duration, 2)\
| eval duration = if(\
    duration_seconds >= 60, tostring(duration_seconds / 60) + " minutes",\
    if(duration_seconds >= 1, tostring(duration_seconds) + " seconds",\
    if(duration_seconds < 1, tostring(duration_seconds * 1000) + " milliseconds",\
    "N/A"))\
  )\
| table _time, src_ip, dst_ip, username, password, session, duration\
| where NOT (isnull(src_ip) OR isnull(username)) OR NOT isnull(dst_ip) OR NOT isnull(duration)

[alert_ssh_honeypot_access_failed]
action.webhook.enable_allowlist = 0
alert.severity = 4
alert.suppress = 1
alert.suppress.period = 4h
alert.track = 1
counttype = number of events
cron_schedule = * * * * *
description = "Alert when an SSH honeypot is accessed unsuccessfully"
dispatch.earliest_time = -4h@h
dispatch.latest_time = now
display.page.search.mode = verbose
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=main source="/home/cowrie/cowrie/var/log/cowrie/cowrie.json" login failed

[alert_ssh_honeypot_access_successful]
action.webhook.enable_allowlist = 0
alert.severity = 5
alert.suppress = 1
alert.suppress.period = 4h
alert.track = 1
counttype = number of events
cron_schedule = * * * * *
description = "Alert when an SSH honeypot is accessed successfully"
dispatch.earliest_time = -4h@h
dispatch.latest_time = now
display.page.search.mode = verbose
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=main source="/home/cowrie/cowrie/var/log/cowrie/cowrie.json" login success

[alert_ssh_honeypot_access_brute_force]
action.webhook.enable_allowlist = 0
alert.severity = 5
alert.suppress = 1
alert.suppress.period = 4h
alert.track = 1
counttype = number of events
cron_schedule = * * * * *
description = "Alert when an SSH honeypot is accessed"
dispatch.earliest_time = -4h@h
dispatch.latest_time = now
display.page.search.mode = verbose
enableSched = 1
quantity = 5
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=main source="/home/cowrie/cowrie/var/log/cowrie/cowrie.json" login failed

# Alert definition for detecting various security events
[alert_security_events]
description = "Alert when there are security events"
disabled = 0
displayview = security_events
enableSched = 1
alert.severity = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search

[alert_account_lockouts]
action.webhook.enable_allowlist = 0
alert.severity = 3
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 6 * * 1
description = "Alert when there are account lockouts"
dispatch.earliest_time = -1w
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
displayview = account_lockouts
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=* sourcetype=WinEventLog:Security EventCode=4740 | stats count by Account_Name

[alert_auth_failures]
action.webhook.enable_allowlist = 0
alert.severity = 3
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 6 * * 1
description = "Alert when there are multiple authentication failures from the same user and source IP"
dispatch.earliest_time = -1w
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
displayview = auth_failures
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=* sourcetype=auth* action=failure | stats count by user, src_ip

[alert_brute_force_attempts]
action.webhook.enable_allowlist = 0
alert.severity = 3
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 6 * * 1
description = "Alert when there are brute force attempts detected"
dispatch.earliest_time = -1w
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
displayview = brute_force_attempts
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=* sourcetype=auth* action=failed | stats count by user, src_ip | where count > 5

[alert_elevated_privileges]
action.webhook.enable_allowlist = 0
alert.severity = 5
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 6 * * 1
description = "Alert when there are elevated privileges"
dispatch.earliest_time = -1w
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
displayview = elevated_privileges
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=* sourcetype=WinEventLog:Security EventCode=4672 OR EventCode=4673 OR EventCode=4688 OR EventCode=4697 OR EventCode=4704 OR EventCode=4705 OR EventCode=4719 | stats count by Account_Name

[alert_excessive_failed_logins]
action.webhook.enable_allowlist = 0
alert.severity = 4
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 6 * * 1
description = "Alert when there are excessive failed logins from a single IP"
dispatch.earliest_time = -1w
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
displayview = excessive_failed_logins
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=* sourcetype=auth* action=failed | stats count by src_ip | where count > 10

[alert_failed_login_attempts]
action.webhook.enable_allowlist = 0
alert.severity = 4
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 6 * * 1
description = "Alert when there are failed login attempts"
dispatch.earliest_time = -1w
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
displayview = failed_login_attempts
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=* sourcetype=WinEventLog:Security EventCode=4625 | stats count by Account_Name

[alert_file_access_by_user]
action.webhook.enable_allowlist = 0
alert.severity = 2
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 6 * * 1
description = "Alert when there is file access by user"
dispatch.earliest_time = -1w
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
displayview = file_access_by_user
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=* sourcetype=WinEventLog:Security EventCode=4663 (Object_Type=File OR Object_Type=Folder OR Object_Type=Key) | stats count by Object_Name, Account_Name

[alert_ftp_anonymous_login]
action.webhook.enable_allowlist = 0
alert.severity = 5
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 6 * * 1
description = "Alert when an anonymous login is detected on the FTP server"
dispatch.earliest_time = -1w
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
displayview = ftp_anonymous_login
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = sourcetype=* action=login user="anonymous" | stats count, sum(bytes), first(_time) by user, src_ip

[alert_gpo_change]
action.webhook.enable_allowlist = 0
alert.severity = 4
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 6 * * 1
description = "Alert when a Group Policy Object is changed"
dispatch.earliest_time = -1w
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
displayview = gpo_change
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=* sourcetype="WinEventLog:Security" EventCode=5145 | rex field=Object_Name "\\\\(?<object_name>[^\\\\]+)\\\\(?<gpo_name>[^\\\\]+)\\.pol" | eval user=mvindex(split(Account_Name, "\\"), 1) | table _time, user, object_name, gpo_name

[alert_group_created]
action.webhook.enable_allowlist = 0
alert.severity = 4
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 6 * * 1
description = "Alert when a new group is created"
dispatch.earliest_time = -1w
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
displayview = group_created
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=* sourcetype=WinEventLog:Security EventCode=4730 | stats count by New_Group_Name

[alert_high_privilege_activity]
action.webhook.enable_allowlist = 0
alert.severity = 5
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 6 * * 1
description = "Alert when a high privilege user (root, admin, or administrator) performs any activity"
dispatch.earliest_time = -1w
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
displayview = high_privilege_activity
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=* user=root OR user=admin OR user=administrator | stats count by user

[alert_high_privilege_user_activity]
action.webhook.enable_allowlist = 0
alert.severity = 5
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 6 * * 1
description = "Alert when there is high privilege user activity"
dispatch.earliest_time = -1w
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
displayview = high_privilege_user_activity
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=* user=root OR user=admin OR user=administrator | stats count by user

[alert_large_file_transfers]
action.webhook.enable_allowlist = 0
alert.severity = 4
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 6 * * 1
description = "Alert when a large file transfer (greater than 100MB) is detected"
dispatch.earliest_time = -1w
dispatch.latest_time = now
displayview = large_file_transfers
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=* sourcetype=file_transfer | eval megabytes=size/1024/1024 | where megabytes > 100

[alert_large_number_successful_logins]
action.webhook.enable_allowlist = 0
alert.severity = 5
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 6 * * 1
description = "Alert when there is a large number of successful logins (>10) from a single IP detected"
dispatch.earliest_time = -1w
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
displayview = large_number_successful_logins
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=* sourcetype=auth* action=success | stats count by src_ip, user | where count > 10

[alert_linpeas_execution]
action.webhook.enable_allowlist = 0
alert.severity = 5
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 6 * * 1
description = "Alert when linpeas tool is executed on a Linux system"
dispatch.earliest_time = -1w
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
displayview = linpeas_execution
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=myindex sourcetype=linux_security (exec_path=* OR src_path=*) *linpeas* | stats count by user, exec_path, src_path

[alert_linux_registry_modification]
action.webhook.enable_allowlist = 0
alert.severity = 4
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 6 * * 1
description = "Alert when a registry modification is made"
dispatch.earliest_time = -1w
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
displayview = linux_registry_modification
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=myindex sourcetype=linux_security (exec_path=* OR src_path=*) (cmd=* OR shell=* OR command=*) registry_key=* | stats count by user, registry_key

[alert_malware_detection]
action.webhook.enable_allowlist = 0
alert.severity = 5
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 6 * * 1
description = "Alert when there is malware detected"
dispatch.earliest_time = -1w
dispatch.latest_time = now
displayview = malware_detection
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=* sourcetype=antivirus | search status=infected

[alert_multiple_security_events]
action.webhook.enable_allowlist = 0
alert.severity = 3
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 6 * * 1
description = "Alert when there are multiple security events"
dispatch.earliest_time = -1w
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
displayview = multiple_security_events
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=* sourcetype=WinEventLog:Security (EventCode=4660 OR EventCode=4723 OR (EventCode=4624 OR EventCode=4672) (Logon_Type=2 OR Logon_Type=10) (Account_Name=*$) OR EventCode=4740 OR EventCode=4728 OR EventCode=4726 OR EventCode=4663) | stats count by Object_Name, Account_Name, src_ip, user | where count > 10

[alert_password_changes]
action.webhook.enable_allowlist = 0
alert.severity = 3
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 6 * * 1
description = "Alert when there are password changes"
dispatch.earliest_time = -1w
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
displayview = password_changes
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=* sourcetype=WinEventLog:Security EventCode=4723 | stats count by Account_Name

[alert_password_spraying]
action.webhook.enable_allowlist = 0
alert.severity = 4
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 6 * * 1
description = "Alert when a password spraying attack is detected"
dispatch.earliest_time = -1w
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
displayview = password_spraying
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=security_logs source=authlog (eventtype=login_failure OR eventtype=authentication_failure) | stats count by user | where count > 10 | table user, count

[alert_pingcastle]
action.webhook.enable_allowlist = 0
alert.severity = 5
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 6 * * 1
description = "Alert when PingCastle tool is executed"
dispatch.earliest_time = -1w
dispatch.latest_time = now
displayview = pingcastle
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=* sourcetype="WinEventLog:Security" EventCode=4688 | search Image_Path="*\PingCastle.exe"

[alert_registry_modifications]
action.webhook.enable_allowlist = 0
alert.severity = 1
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 6 * * 1
description = "Alert when a registry modification is detected after running any executable, reverse shell, or bind shell"
dispatch.earliest_time = -1w
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
displayview = registry_modifications
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=windows sourcetype="XmlWinEventLog:Microsoft-Windows-Sysmon/Operational" EventID=13 Image!=C:\\Windows\\System32\\rundll32.exe TargetObject="HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run" | stats count by Image, TargetObject

[alert_rename_start_service]
action.webhook.enable_allowlist = 0
alert.severity = 3
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 6 * * 1
description = "Alert when a service is renamed and started"
dispatch.earliest_time = -1w
dispatch.latest_time = now
displayview = rename_start_service
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=* sourcetype=WinEventLog:System EventCode=7045 "Service Name"=* renamed * started *

[alert_sharphound]
action.webhook.enable_allowlist = 0
alert.severity = 5
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 6 * * 1
description = "Alert when SharpHound tool is executed"
dispatch.earliest_time = -1w
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
displayview = sharphound
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=* sourcetype="WinEventLog:Security" EventCode=4688 TargetImage=*Sharphound.exe | stats count by host

[alert_ssh_honeypot_access]
action.webhook.enable_allowlist = 0
alert.expires = 30d
alert.severity = 4
alert.suppress = 1
alert.suppress.period = 1h
alert.track = 1
counttype = number of events
cron_schedule = * * * * *
description = "Alert when an SSH honeypot is accessed"
dispatch.earliest_time = -1w
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
displayview = ssh_honeypot_access
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=*| rex field=_raw "^(?<timestamp>[^ ]+ [^ ]+) (?<src_ip>[^:]+):\d+ SSH.* username=(?<username>[^ ]+)" | stats count by src_ip, username | sort -count

[alert_successful_file_deletion]
action.webhook.enable_allowlist = 0
alert.severity = 5
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 6 * * 1
description = "Alert when a file is successfully deleted"
dispatch.earliest_time = -1w
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
displayview = successful_file_deletion
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=* sourcetype=WinEventLog:Security EventCode=4660 | stats count by Object_Name

[alert_successful_user_creation]
action.webhook.enable_allowlist = 0
alert.severity = 3
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 6 * * 1
description = "Alert when a user account is successfully created"
dispatch.earliest_time = -1w
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
displayview = successful_user_creation
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=* sourcetype=WinEventLog:Security EventCode=4720 | stats count by Account_Name

[alert_suspicious_dns_requests]
action.webhook.enable_allowlist = 0
alert.severity = 4
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 6 * * 1
description = "Alert when there are suspicious DNS requests detected"
dispatch.earliest_time = -1w
dispatch.latest_time = now
displayview = suspicious_dns_requests
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=* sourcetype=dns | search "query=*hack* OR query=*backdoor* OR query=*trojan*"

[alert_suspicious_system_changes]
action.webhook.enable_allowlist = 0
alert.severity = 3
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 6 * * 1
description = "Alert when there is a suspicious system change (mkdir, rm, or mv command) detected"
dispatch.earliest_time = -1w
dispatch.latest_time = now
displayview = suspicious_system_changes
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=* sourcetype=os_change | search "command=mkdir* OR command=rm* OR command=mv*"

[alert_unauthorized_access_attempts]
action.webhook.enable_allowlist = 0
alert.severity = 4
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 6 * * 1
description = "Alert when there is an unauthorized access attempt detected"
dispatch.earliest_time = -1w
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
displayview = unauthorized_access_attempts
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=* sourcetype=auth* action=failed | stats count by src_ip, user, dest

[alert_unusual_network_traffic]
action.webhook.enable_allowlist = 0
alert.severity = 4
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 6 * * 1
description = "Alert when there is unusual network traffic (less than 10 connections) between two IPs"
dispatch.earliest_time = -1w
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
displayview = unusual_network_traffic
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=* sourcetype=network_traffic | stats count by src_ip, dest_ip, dest_port | where count < 10

[alert_unusual_system_activity]
action.webhook.enable_allowlist = 0
alert.severity = 4
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 6 * * 1
description = "Alert when there is unusual system activity detected (sudo, passwd, or shadow command)"
dispatch.earliest_time = -1w
dispatch.latest_time = now
displayview = unusual_system_activity
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=* sourcetype=os_change | search "command=*sudo* OR command=*passwd* OR command=*shadow*"

[alert_user_added_to_group]
action.webhook.enable_allowlist = 0
alert.severity = 4
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 6 * * 1
description = "Alert when a user is added to a group"
dispatch.earliest_time = -1w
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
displayview = user_added_to_group
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=* sourcetype=WinEventLog:Security EventCode=4728 | stats count by memberof, member | where member!="ANONYMOUS LOGON" and member!="*$" and member!="NT AUTHORITY\\LOCAL SERVICE" and member!="NT AUTHORITY\\NETWORK SERVICE" and member!="NT AUTHORITY\\SYSTEM" and member!="BUILTIN\\Administrators" and member!="BUILTIN\\Users"

[alert_user_login_activity]
action.webhook.enable_allowlist = 0
alert.severity = 1
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 6 * * 1
description = "Alert when a user logs in"
dispatch.earliest_time = -1w
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
displayview = user_login_activity
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=* sourcetype=WinEventLog:Security EventCode=4624 | stats count by Account_Name

[alert_user_logoff_activity]
action.webhook.enable_allowlist = 0
alert.severity = 1
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 6 * * 1
description = "Alert when there is user logoff activity"
dispatch.earliest_time = -1w
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
displayview = user_logoff_activity
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=* sourcetype=WinEventLog:Security EventCode=4634 | stats count by Account_Name

[alert_xml_file_created]
action.webhook.enable_allowlist = 0
alert.severity = 3
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 6 * * 1
description = "Alert when an XML file is created and called by an executable"
dispatch.earliest_time = -1w
dispatch.latest_time = now
displayview = xml_file_created
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=* sourcetype="XmlEventLog" EventName="XmlFileCreated" | rex field=_raw "<Filename>(?<filename>.*?)</Filename>" | stats count by filename | lookup ExecutableLookup.csv filename AS filename OUTPUTNEW executable | search executable!="null" | stats count by executable

[rule_group_membership_changes]
action.webhook.enable_allowlist = 0
alert.severity = 2
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 6 * * 1
description = "Alert when there are group membership changes"
dispatch.earliest_time = -1w
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
displayview = group_membership_changes
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=* sourcetype=WinEventLog:Security EventCode=4728 | stats count by memberof

[rule_object_access]
action.webhook.enable_allowlist = 0
alert.severity = 2
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 6 * * 1
description = "Alert when objects are accessed"
dispatch.earliest_time = -1w
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
displayview = object_access
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=* sourcetype=WinEventLog:Security EventCode=4663 | stats count by Object_Name

[rule_user_account_deletion]
action.webhook.enable_allowlist = 0
alert.severity = 1
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 6 * * 1
description = "Alert when user accounts are deleted"
dispatch.earliest_time = -1w
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
displayview = user_account_deletion
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=* sourcetype=WinEventLog:Security EventCode=4726 | stats count by Account_Name

[lateral_movement_detection]
action.webhook.enable_allowlist = 0
alert.severity = 5
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 6 * * 1
description = "Alert when lateral movement is detected between machines on the network"
dispatch.earliest_time = -1w
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
displayview = lateral_movement_detection
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=* (EventCode=4624 OR EventCode=4625) src_ip=* | stats count by src_ip, dest_ip, user, host
